class Snake {
  private:
    // The array that stores the position of each segment of the snake
    int snake_body[MAX_LENGTH][2];

    // The current direction of the snake
    int direction;

    // The length of the snake
    int length;

  public:
    Snake() {
      // Initialize the snake with a default length and direction
      length = DEFAULT_LENGTH;
      direction = DEFAULT_DIRECTION;

      // Initialize the position of each segment of the snake
      for (int i = 0; i < length; i++) {
        snake_body[i][0] = DEFAULT_START_X;
        snake_body[i][1] = DEFAULT_START_Y - i;
      }
    }

    // This function updates the position of the snake based on its current direction
    void move() {
      // Shift the position of each segment of the snake to the position of the segment in front of it
      for (int i = length - 1; i > 0; i--) {
        snake_body[i][0] = snake_body[i - 1][0];
        snake_body[i][1] = snake_body[i - 1][1];
      }

      // Update the position of the head of the snake based on its current direction
      if (direction == UP) {
        snake_body[0][1]--;
      } else if (direction == DOWN) {
        snake_body[0][1]++;
      } else if (direction == LEFT) {
        snake_body[0][0]--;
      } else if (direction == RIGHT) {
        snake_body[0][0]++;
      }
    }

    // This function changes the direction of the snake
    void change_direction(int new_direction) {
      // Only change the direction if the new direction is not the opposite of the current direction
      if (new_direction != opposite_direction(direction)) {
        direction = new_direction;
      }
    }

    // This function returns the position of each segment of the snake
    int[][] get_position() {
      return snake_body;
    }

    // This function returns the length of the snake
    int get_length() {
      return length;
    }
};
